=========================
nested_namespace template
=========================

Use paster::

    >>> paster('create -t nested_namespace plone.app.example --no-interactive')
    paster create -t nested_namespace plone.app.example --no-interactive
    ...

Check the top-level package structure::

    >>> top_dir = os.path.join('plone.app.example',)
    >>> ls(top_dir)
    CHANGES.txt
    CONTRIBUTORS.txt
    README.txt
    docs
    setup.py
    src

Check the src directory structure::

    >>> src_dir = os.path.join('plone.app.example', 'src')
    >>> ls(src_dir)
    plone
    plone.app.example.egg-info
    

The default license for our this template is the GPL, make sure that the GPL is 
the license that was actually created::

    >>> license_dir = os.path.join('plone.app.example', 'docs')
    >>> ls(license_dir)
    LICENSE.GPL
    LICENSE.txt

Let's look at the generated LICENSE.txt file to make sure that our author name
and the correct package name and date were written in::

    >>> cat(license_dir, 'LICENSE.txt')
    plone.app.example Copyright ..., <YOUR NAME HERE>
    <BLANKLINE>
    ...

Let's check the content::

    >>> package_dir = os.path.join('plone.app.example', 'src',
    ...                            'plone', 'app', 'example')
    >>> ls(package_dir)
    __init__.py
    

